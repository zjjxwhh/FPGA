|top
clk => clk.IN1
rst_n => rst_n.IN4
row[0] => row[0].IN1
row[1] => row[1].IN1
row[2] => row[2].IN1
row[3] => row[3].IN1
col[0] <= key_scan:key_scan_dut.col
col[1] <= key_scan:key_scan_dut.col
col[2] <= key_scan:key_scan_dut.col
col[3] <= key_scan:key_scan_dut.col
sel[0] <= seg7:seg7_dut.sel
sel[1] <= seg7:seg7_dut.sel
sel[2] <= seg7:seg7_dut.sel
seg[0] <= seg7:seg7_dut.seg
seg[1] <= seg7:seg7_dut.seg
seg[2] <= seg7:seg7_dut.seg
seg[3] <= seg7:seg7_dut.seg
seg[4] <= seg7:seg7_dut.seg
seg[5] <= seg7:seg7_dut.seg
seg[6] <= seg7:seg7_dut.seg
seg[7] <= seg7:seg7_dut.seg
beep <= beep_driver:beep_driver_dut.beep


|top|freq:freq_dut
clk => clk_1khz~reg0.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => cnt[21].CLK
clk => cnt[22].CLK
clk => cnt[23].CLK
clk => cnt[24].CLK
clk => cnt[25].CLK
rst_n => clk_1khz~reg0.ACLR
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
rst_n => cnt[20].ACLR
rst_n => cnt[21].ACLR
rst_n => cnt[22].ACLR
rst_n => cnt[23].ACLR
rst_n => cnt[24].ACLR
rst_n => cnt[25].ACLR
clk_1khz <= clk_1khz~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|key_scan:key_scan_dut
clk => flag~reg0.CLK
clk => row_col[0].CLK
clk => row_col[1].CLK
clk => row_col[2].CLK
clk => row_col[3].CLK
clk => row_col[4].CLK
clk => row_col[5].CLK
clk => row_col[6].CLK
clk => row_col[7].CLK
clk => col[0]~reg0.CLK
clk => col[1]~reg0.CLK
clk => col[2]~reg0.CLK
clk => col[3]~reg0.CLK
clk => cnt_time[0].CLK
clk => cnt_time[1].CLK
clk => cnt_time[2].CLK
clk => cnt_time[3].CLK
clk => state~4.DATAIN
rst_n => flag~reg0.ACLR
rst_n => row_col[0].ACLR
rst_n => row_col[1].ACLR
rst_n => row_col[2].ACLR
rst_n => row_col[3].ACLR
rst_n => row_col[4].ACLR
rst_n => row_col[5].ACLR
rst_n => row_col[6].ACLR
rst_n => row_col[7].ACLR
rst_n => col[0]~reg0.ACLR
rst_n => col[1]~reg0.ACLR
rst_n => col[2]~reg0.ACLR
rst_n => col[3]~reg0.ACLR
rst_n => cnt_time[0].ACLR
rst_n => cnt_time[1].ACLR
rst_n => cnt_time[2].ACLR
rst_n => cnt_time[3].ACLR
rst_n => press_num[3]$latch.ACLR
rst_n => press_num[2]$latch.ACLR
rst_n => press_num[1]$latch.ACLR
rst_n => press_num[0]$latch.ACLR
rst_n => state~6.DATAIN
row[0] => row_col.DATAB
row[0] => Equal0.IN3
row[1] => row_col.DATAB
row[1] => Equal0.IN2
row[2] => row_col.DATAB
row[2] => Equal0.IN1
row[3] => row_col.DATAB
row[3] => Equal0.IN0
col[0] <= col[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[1] <= col[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[2] <= col[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
col[3] <= col[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
press_num[0] <= press_num[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
press_num[1] <= press_num[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
press_num[2] <= press_num[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
press_num[3] <= press_num[3]$latch.DB_MAX_OUTPUT_PORT_TYPE


|top|compute:compute_dut
clk => flag_t.CLK
clk => data_in[0].CLK
clk => data_in[1].CLK
clk => data_in[2].CLK
clk => data_in[3].CLK
clk => data_in[4].CLK
clk => data_in[5].CLK
clk => data_in[6].CLK
clk => data_in[7].CLK
clk => data_in[8].CLK
clk => data_in[9].CLK
clk => data_in[10].CLK
clk => data_in[11].CLK
clk => data_in[12].CLK
clk => data_in[13].CLK
clk => data_in[14].CLK
clk => data_in[15].CLK
clk => data_in[16].CLK
clk => data_in[17].CLK
clk => data_in[18].CLK
clk => data_in[19].CLK
clk => data_in[20].CLK
clk => data_in[21].CLK
clk => data_in[22].CLK
clk => data_in[23].CLK
clk => flag_s[0].CLK
clk => flag_s[1].CLK
clk => flag_s[2].CLK
clk => flag_s[3].CLK
clk => num3[0].CLK
clk => num3[1].CLK
clk => num3[2].CLK
clk => num3[3].CLK
clk => num3[4].CLK
clk => num3[5].CLK
clk => num3[6].CLK
clk => num3[7].CLK
clk => num3[8].CLK
clk => num3[9].CLK
clk => num3[10].CLK
clk => num3[11].CLK
clk => num3[12].CLK
clk => num3[13].CLK
clk => num3[14].CLK
clk => num3[15].CLK
clk => num3[16].CLK
clk => num3[17].CLK
clk => num3[18].CLK
clk => num3[19].CLK
clk => num3[20].CLK
clk => num3[21].CLK
clk => num3[22].CLK
clk => num3[23].CLK
clk => num2[0].CLK
clk => num2[1].CLK
clk => num2[2].CLK
clk => num2[3].CLK
clk => num2[4].CLK
clk => num2[5].CLK
clk => num2[6].CLK
clk => num2[7].CLK
clk => num2[8].CLK
clk => num2[9].CLK
clk => num2[10].CLK
clk => num2[11].CLK
clk => num2[12].CLK
clk => num2[13].CLK
clk => num2[14].CLK
clk => num2[15].CLK
clk => num2[16].CLK
clk => num2[17].CLK
clk => num2[18].CLK
clk => num2[19].CLK
clk => num2[20].CLK
clk => num2[21].CLK
clk => num2[22].CLK
clk => num2[23].CLK
clk => num1[0].CLK
clk => num1[1].CLK
clk => num1[2].CLK
clk => num1[3].CLK
clk => num1[4].CLK
clk => num1[5].CLK
clk => num1[6].CLK
clk => num1[7].CLK
clk => num1[8].CLK
clk => num1[9].CLK
clk => num1[10].CLK
clk => num1[11].CLK
clk => num1[12].CLK
clk => num1[13].CLK
clk => num1[14].CLK
clk => num1[15].CLK
clk => num1[16].CLK
clk => num1[17].CLK
clk => num1[18].CLK
clk => num1[19].CLK
clk => num1[20].CLK
clk => num1[21].CLK
clk => num1[22].CLK
clk => num1[23].CLK
clk => flag_o.CLK
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_out[8]~reg0.CLK
clk => data_out[9]~reg0.CLK
clk => data_out[10]~reg0.CLK
clk => data_out[11]~reg0.CLK
clk => data_out[12]~reg0.CLK
clk => data_out[13]~reg0.CLK
clk => data_out[14]~reg0.CLK
clk => data_out[15]~reg0.CLK
clk => data_out[16]~reg0.CLK
clk => data_out[17]~reg0.CLK
clk => data_out[18]~reg0.CLK
clk => data_out[19]~reg0.CLK
clk => data_out[20]~reg0.CLK
clk => data_out[21]~reg0.CLK
clk => data_out[22]~reg0.CLK
clk => data_out[23]~reg0.CLK
clk => state_s~5.DATAIN
rst_n => flag_t.ACLR
rst_n => data_in[0].ACLR
rst_n => data_in[1].ACLR
rst_n => data_in[2].ACLR
rst_n => data_in[3].ACLR
rst_n => data_in[4].ACLR
rst_n => data_in[5].ACLR
rst_n => data_in[6].ACLR
rst_n => data_in[7].ACLR
rst_n => data_in[8].ACLR
rst_n => data_in[9].ACLR
rst_n => data_in[10].ACLR
rst_n => data_in[11].ACLR
rst_n => data_in[12].ACLR
rst_n => data_in[13].ACLR
rst_n => data_in[14].ACLR
rst_n => data_in[15].ACLR
rst_n => data_in[16].ACLR
rst_n => data_in[17].ACLR
rst_n => data_in[18].ACLR
rst_n => data_in[19].ACLR
rst_n => data_in[20].ACLR
rst_n => data_in[21].ACLR
rst_n => data_in[22].ACLR
rst_n => data_in[23].ACLR
rst_n => flag_s[0].ACLR
rst_n => flag_s[1].ACLR
rst_n => flag_s[2].ACLR
rst_n => flag_s[3].ACLR
rst_n => num3[0].ACLR
rst_n => num3[1].ACLR
rst_n => num3[2].ACLR
rst_n => num3[3].ACLR
rst_n => num3[4].ACLR
rst_n => num3[5].ACLR
rst_n => num3[6].ACLR
rst_n => num3[7].ACLR
rst_n => num3[8].ACLR
rst_n => num3[9].ACLR
rst_n => num3[10].ACLR
rst_n => num3[11].ACLR
rst_n => num3[12].ACLR
rst_n => num3[13].ACLR
rst_n => num3[14].ACLR
rst_n => num3[15].ACLR
rst_n => num3[16].ACLR
rst_n => num3[17].ACLR
rst_n => num3[18].ACLR
rst_n => num3[19].ACLR
rst_n => num3[20].ACLR
rst_n => num3[21].ACLR
rst_n => num3[22].ACLR
rst_n => num3[23].ACLR
rst_n => num2[0].ACLR
rst_n => num2[1].ACLR
rst_n => num2[2].ACLR
rst_n => num2[3].ACLR
rst_n => num2[4].ACLR
rst_n => num2[5].ACLR
rst_n => num2[6].ACLR
rst_n => num2[7].ACLR
rst_n => num2[8].ACLR
rst_n => num2[9].ACLR
rst_n => num2[10].ACLR
rst_n => num2[11].ACLR
rst_n => num2[12].ACLR
rst_n => num2[13].ACLR
rst_n => num2[14].ACLR
rst_n => num2[15].ACLR
rst_n => num2[16].ACLR
rst_n => num2[17].ACLR
rst_n => num2[18].ACLR
rst_n => num2[19].ACLR
rst_n => num2[20].ACLR
rst_n => num2[21].ACLR
rst_n => num2[22].ACLR
rst_n => num2[23].ACLR
rst_n => num1[0].ACLR
rst_n => num1[1].ACLR
rst_n => num1[2].ACLR
rst_n => num1[3].ACLR
rst_n => num1[4].ACLR
rst_n => num1[5].ACLR
rst_n => num1[6].ACLR
rst_n => num1[7].ACLR
rst_n => num1[8].ACLR
rst_n => num1[9].ACLR
rst_n => num1[10].ACLR
rst_n => num1[11].ACLR
rst_n => num1[12].ACLR
rst_n => num1[13].ACLR
rst_n => num1[14].ACLR
rst_n => num1[15].ACLR
rst_n => num1[16].ACLR
rst_n => num1[17].ACLR
rst_n => num1[18].ACLR
rst_n => num1[19].ACLR
rst_n => num1[20].ACLR
rst_n => num1[21].ACLR
rst_n => num1[22].ACLR
rst_n => num1[23].ACLR
rst_n => flag_o.ACLR
rst_n => data_out[0]~reg0.ACLR
rst_n => data_out[1]~reg0.ACLR
rst_n => data_out[2]~reg0.ACLR
rst_n => data_out[3]~reg0.ACLR
rst_n => data_out[4]~reg0.ACLR
rst_n => data_out[5]~reg0.ACLR
rst_n => data_out[6]~reg0.ACLR
rst_n => data_out[7]~reg0.ACLR
rst_n => data_out[8]~reg0.ACLR
rst_n => data_out[9]~reg0.ACLR
rst_n => data_out[10]~reg0.ACLR
rst_n => data_out[11]~reg0.ACLR
rst_n => data_out[12]~reg0.ACLR
rst_n => data_out[13]~reg0.ACLR
rst_n => data_out[14]~reg0.ACLR
rst_n => data_out[15]~reg0.ACLR
rst_n => data_out[16]~reg0.ACLR
rst_n => data_out[17]~reg0.ACLR
rst_n => data_out[18]~reg0.ACLR
rst_n => data_out[19]~reg0.ACLR
rst_n => data_out[20]~reg0.ACLR
rst_n => data_out[21]~reg0.ACLR
rst_n => data_out[22]~reg0.ACLR
rst_n => data_out[23]~reg0.ACLR
rst_n => state_s~7.DATAIN
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => num3.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => data_in.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => num2.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => data_out.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => state_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_s.OUTPUTSELECT
flag => flag_t.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
flag => num1.OUTPUTSELECT
press_num[0] => LessThan0.IN8
press_num[0] => data_out.DATAB
press_num[0] => num1.DATAB
press_num[0] => LessThan1.IN8
press_num[0] => LessThan2.IN8
press_num[0] => flag_s.DATAB
press_num[0] => num2.DATAB
press_num[0] => flag_s.DATAB
press_num[0] => Equal0.IN31
press_num[0] => Equal1.IN3
press_num[1] => LessThan0.IN7
press_num[1] => Add1.IN52
press_num[1] => num1.DATAB
press_num[1] => data_out.DATAB
press_num[1] => LessThan1.IN7
press_num[1] => LessThan2.IN7
press_num[1] => flag_s.DATAB
press_num[1] => Add3.IN52
press_num[1] => flag_s.DATAB
press_num[1] => Equal0.IN2
press_num[1] => Equal1.IN2
press_num[2] => LessThan0.IN6
press_num[2] => Add1.IN51
press_num[2] => num1.DATAB
press_num[2] => data_out.DATAB
press_num[2] => LessThan1.IN6
press_num[2] => LessThan2.IN6
press_num[2] => flag_s.DATAB
press_num[2] => Add3.IN51
press_num[2] => flag_s.DATAB
press_num[2] => Equal0.IN1
press_num[2] => Equal1.IN1
press_num[3] => LessThan0.IN5
press_num[3] => Add1.IN50
press_num[3] => num1.DATAB
press_num[3] => data_out.DATAB
press_num[3] => LessThan1.IN5
press_num[3] => LessThan2.IN5
press_num[3] => flag_s.DATAB
press_num[3] => Add3.IN50
press_num[3] => flag_s.DATAB
press_num[3] => Equal0.IN0
press_num[3] => Equal1.IN0
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[12] <= data_out[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[13] <= data_out[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[14] <= data_out[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[15] <= data_out[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[16] <= data_out[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[17] <= data_out[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[18] <= data_out[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[19] <= data_out[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[20] <= data_out[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[21] <= data_out[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[22] <= data_out[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[23] <= data_out[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|seg7:seg7_dut
clk_1khz => sel[0]~reg0.CLK
clk_1khz => sel[1]~reg0.CLK
clk_1khz => sel[2]~reg0.CLK
clk_1khz => temp[0].CLK
clk_1khz => temp[1].CLK
clk_1khz => temp[2].CLK
clk_1khz => temp[3].CLK
clk_1khz => state~1.DATAIN
rst_n => sel[0]~reg0.ACLR
rst_n => sel[1]~reg0.ACLR
rst_n => sel[2]~reg0.ACLR
rst_n => temp[0].ACLR
rst_n => temp[1].ACLR
rst_n => temp[2].ACLR
rst_n => temp[3].ACLR
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => seg.OUTPUTSELECT
rst_n => state~3.DATAIN
data_in[0] => Selector3.IN5
data_in[1] => Selector2.IN5
data_in[2] => Selector1.IN5
data_in[3] => Selector0.IN5
data_in[4] => Selector3.IN4
data_in[5] => Selector2.IN4
data_in[6] => Selector1.IN4
data_in[7] => Selector0.IN4
data_in[8] => Selector3.IN3
data_in[9] => Selector2.IN3
data_in[10] => Selector1.IN3
data_in[11] => Selector0.IN3
data_in[12] => Selector3.IN2
data_in[13] => Selector2.IN2
data_in[14] => Selector1.IN2
data_in[15] => Selector0.IN2
data_in[16] => Selector3.IN1
data_in[17] => Selector2.IN1
data_in[18] => Selector1.IN1
data_in[19] => Selector0.IN1
data_in[20] => Selector3.IN0
data_in[21] => Selector2.IN0
data_in[22] => Selector1.IN0
data_in[23] => Selector0.IN0
sel[0] <= sel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= <VCC>


|top|beep_driver:beep_driver_dut
clk_1khz => beep~reg0.CLK
clk_1khz => beep_cnt[0].CLK
clk_1khz => beep_cnt[1].CLK
clk_1khz => beep_cnt[2].CLK
clk_1khz => beep_cnt[3].CLK
clk_1khz => beep_cnt[4].CLK
clk_1khz => beep_cnt[5].CLK
clk_1khz => beep_cnt[6].CLK
flag => beep_cnt[0].ACLR
flag => beep_cnt[1].ACLR
flag => beep_cnt[2].ACLR
flag => beep_cnt[3].ACLR
flag => beep_cnt[4].ACLR
flag => beep_cnt[5].ACLR
flag => beep_cnt[6].ACLR
flag => beep~reg0.ENA
beep <= beep~reg0.DB_MAX_OUTPUT_PORT_TYPE


